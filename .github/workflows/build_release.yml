name: Build and release precompiled binaries
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to rebuild (e.g., v1.0.0)'
        required: true

permissions:
  contents: write

jobs:
  build_release:
    name: Test Burrito Build
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - uses: actions/checkout@v3

      - name: Setup elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.3.2
          elixir-version: 1.17.x

      - name: Cache Mix
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache Burrito OTP deps
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-burrito-
          path: |
            ~/.cache/burrito_file_cache/
            ~/burrito_out/

      - name: Install dependencies
        run: mix deps.get

      - name: Install Burrito dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xz-utils p7zip-full

      - name: Setup Zig for burrito
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0

      - name: Debug before setting environment variables
        run: |
          echo "TERM: $TERM"
          echo "COLORTERM: $COLORTERM"
          echo "FORCE_COLOR: $FORCE_COLOR"
          elixir -e "IO.puts IO.ANSI.enabled?()"

      - name: Set environment variables
        run: |
          echo "TERM=xterm-256color" >> $GITHUB_ENV
          echo "FORCE_COLOR=1" >> $GITHUB_ENV

      - name: Debug after setting environment variables
        run: |
          echo "TERM: $TERM"
          echo "COLORTERM: $COLORTERM"
          echo "FORCE_COLOR: $FORCE_COLOR"
          elixir -e "IO.puts IO.ANSI.enabled?()"

      - name: Create release
        run: mix release

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.tag
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: Release ${{ github.event.inputs.tag || github.ref_name }}
          draft: true
          prerelease: false
          files: burrito_out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test executable
        run: |
          # Find the correct executable
          EXECUTABLE=$(find burrito_out -name "og_linux_x86_64" -type f)
          if [ -z "$EXECUTABLE" ]; then
            echo "Error: Could not find the Linux x86_64 executable"
            exit 1
          fi

          # Output the path to the executable
          echo "Found executable: $EXECUTABLE"

          # Make it executable (in case it's not already)
          chmod +x "$EXECUTABLE"

          # Print the type of the file to ensure it's an executable
          file "$EXECUTABLE"

          # Test the executable
          "$EXECUTABLE" --version

          # Test a command that should output colors
          "$EXECUTABLE" log

